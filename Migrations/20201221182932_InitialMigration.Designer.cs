// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.Data;

namespace TaskManager.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201221182932_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TaskManager.Codes.Model.TaskLogTypeCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskLogTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Coding"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Brainstorming"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("TaskManager.Codes.Model.TaskPriorityCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskPriorities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "High"
                        });
                });

            modelBuilder.Entity("TaskManager.Codes.Model.TaskStatusCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Not started"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "In progress"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Complete"
                        });
                });

            modelBuilder.Entity("TaskManager.Task.Models.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TaskPriorityCodeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaskStatusCodeId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskPriorityCodeId");

                    b.HasIndex("TaskStatusCodeId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManager.Task.Models.TaskLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaskLogTypeId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskLogTypeId");

                    b.ToTable("TaskLogs");
                });

            modelBuilder.Entity("TaskManager.User.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskManager.Task.Models.Task", b =>
                {
                    b.HasOne("TaskManager.Codes.Model.TaskPriorityCode", "TaskPriorityCode")
                        .WithMany()
                        .HasForeignKey("TaskPriorityCodeId");

                    b.HasOne("TaskManager.Codes.Model.TaskStatusCode", "TaskStatusCode")
                        .WithMany()
                        .HasForeignKey("TaskStatusCodeId");

                    b.HasOne("TaskManager.User.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskPriorityCode");

                    b.Navigation("TaskStatusCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskManager.Task.Models.TaskLog", b =>
                {
                    b.HasOne("TaskManager.Task.Models.Task", "Task")
                        .WithMany("TaskLogs")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManager.Codes.Model.TaskLogTypeCode", "TaskLogType")
                        .WithMany()
                        .HasForeignKey("TaskLogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("TaskLogType");
                });

            modelBuilder.Entity("TaskManager.Task.Models.Task", b =>
                {
                    b.Navigation("TaskLogs");
                });

            modelBuilder.Entity("TaskManager.User.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
